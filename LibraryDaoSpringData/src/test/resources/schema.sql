drop table borrow if exists;
drop table fine if exists;
drop table user if exists;
drop table book if exists;

drop sequence if exists s_fine;
drop sequence if exists s_user;
drop sequence if exists s_book;

create sequence s_fine start with 1 increment by 1;
create sequence s_user start with 1 increment by 1;
create sequence s_book start with 1 increment by 1;

create table book (
        id bigint generated by default as sequence s_book primary key,
        bought_date timestamp,
        isbn varchar(255),
        title varchar(255)
);

create table user (
        id bigint generated by default as sequence s_user primary key,
        address varchar(255),
        first_name varchar(255),
        join_date timestamp,
        last_name varchar(255),
        phone varchar(255),
        email varchar(100)
);

create table fine (
        id bigint generated by default as sequence s_fine primary key,
        user_id bigint not null,
        fine_end_date timestamp
);

alter table fine
        add constraint fk_fine_user
        foreign key (user_id)
        references user(id);

create table borrow (
        book_id bigint not null,
        borrow_date timestamp not null,
        user_id bigint not null,
        fine_id bigint,
        actual_return_date timestamp,
        expected_return_date timestamp,
        primary key (book_id, borrow_date, user_id)
);

alter table borrow
        add constraint fk_borrow_book
        foreign key (book_id)
        references book(id);

alter table borrow
        add constraint fk_borrow_user
        foreign key (user_id)
        references user(id);

alter table borrow
        add constraint fk_borrow_fine
        foreign key (fine_id)
        references fine(id);
